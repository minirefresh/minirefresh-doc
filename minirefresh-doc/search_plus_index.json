{"changelog.html":{"url":"changelog.html","title":"更新日志","keywords":"","body":"更新日志 20171121 更新版本 2.0.0 内部ES6语法重构 20171028 更新版本 1.0.8 同一个页面多个totop时无法识别的问题 与Mui样式混用时没有更多数据显示不全问题 增加down.isAutoResetUpLoading，默认为true，为false时下拉刷新后不会自动重置上拉状态 20170929 更新版本 1.0.7 修复 IOS 下 UC 浏览器中，当下拉，手指滑出屏幕之外的时候无法回弹回去的 bug 20170925 更新版本 1.0.6 修复endDownLoading会自动触发上拉加载的BUG 20170918 更新版本 1.0.5 增加 getPosition API，可以获取当前滚动位置 20170916 更新版本 1.0.4 修复iOS Webview下特定场景下拉刷新回弹时会有黑屏的BUG Core内部增加_resetUpLoadingHook 20170913 更新版本 1.0.3 修复Npm引入与文件UMD引入方式冲突问题 去除Npm发布项目中的无用依赖，改到dev中 20170907 更新版本 1.0.2 增加isUseBodyScroll配置，使用body的scroll事件来实现上拉，在特殊场景下有用 增加dampRateBegin配置，设置下拉小于offset时的阻尼系数 增加mui透明导航栏嵌套示例 20170906 更新版本 1.0.1 增加横向滑动配置 增加default主题设置下拉成功提示 20170902 发布版本 1.0.0 20170831 提供基础文档 20170830 内存版本0.04，代码基本完成，示例基本提供，剩余文档 20170821 用GitBook构建API文档框架 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-11-21 16:59:58 "},"./":{"url":"./","title":"简介","keywords":"","body":"minirefresh 零依赖，高性能，多主题，易拓展。优雅的H5下拉刷新 Notice 喜欢，你就给一个star! 特点 零依赖（原生JS实现，不依赖于任何库） 多平台支持。一套代码，多端运行，支持Android，iOS，主流浏览器 丰富的主题，官方提供多种主题（包括默认，applet-仿小程序，drawer3d-3d抽屉效果，taobao-仿淘宝等） 高性能。动画采用css3+硬件加速，在主流手机上流畅运行 良好的兼容性。支持和各种Scroll的嵌套（包括mui-scroll,IScroll,Swipe等），支持Vue环境下的使用 易拓展，三层架构，专门抽取UI层面，方便实现各种的主题，实现一套主题非常方便，而且几乎可以实现任何的效果 优雅的API和源码，API设计科学，简单，源码严谨，所有源码通过ESlint检测 完善的文档与示例，提供完善的showcase，以及文档（文档正在更新中...） 官网 https://minirefresh.github.io/ Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"guid/guid_start.html":{"url":"guid/guid_start.html","title":"快速开始","keywords":"","body":"快速开始 安装 NPM npm install minirefresh https://www.npmjs.com/package/minirefresh GIT git clone git://github.com/minirefresh/minirefresh.git https://github.com/minirefresh/minirefresh 引入 require引入 // 同时支持NPM与文件形式引入 var MiniRefreshTools = require('xxx/minirefresh.js'); require('xxx/minirefresh.css'); import引入 // debug下是.js dist下是.min.js import MiniRefreshTools from 'minirefresh'; import 'minirefresh/dist/debug/minirefresh.css' 页面布局 初始化 // 引入任何一个主题后，都会有一个 MiniRefresh 全局变量 var miniRefresh = new MiniRefresh({ container: '#minirefresh', down: { callback: function() { // 下拉事件 } }, up: { callback: function() { // 上拉事件 } } }); 结束刷新 // 结束下拉刷新 miniRefresh.endDownLoading(); // 结束上拉加载 // 参数为true代表没有更多数据，否则接下来可以继续加载 miniRefresh.endUpLoading(true); Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"guid/guid_showcase.html":{"url":"guid/guid_showcase.html","title":"showcase","keywords":"","body":"showcase 可以直接在线体验效果 https://minirefresh.github.io/minirefresh/examples/ Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"guid/guid_effect.html":{"url":"guid/guid_effect.html","title":"效果展示","keywords":"","body":"效果展示 效果 基础示例 1. 【基础新闻列表】最基本的下拉刷新使用 2. 【多列表单容器】每次切换菜单时刷新容器 3. 【多列表多容器】多个列表都有一个Minirefresh对象 4. 【Vue支持】支持Vue下的使用 嵌套示例 1. 【Mui-Slider】内部嵌套图片轮播 2. 【Mui-Scroll】嵌套在Mui-Scroll中 3. 【Swipe】嵌套在Swipe中 主题示例 1. 【applet】仿微信小程序主题 2. 【taobao】仿淘宝刷新主题 3. 【drawer3d】3D抽屉效果主题 4. 【drawer-slider】滑动抽屉效果主题 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"api/api_globalvar.html":{"url":"api/api_globalvar.html","title":"全局变量","keywords":"","body":"MiniRefresh库暴露的全局变量 MiniRefreshTools minirefresh核心类暴露的全局变量，该变量的层级大概如下 MiniRefreshTools |- - // 直接.xxx就能调用的一些工具方法 | |- extend // 对象的拓展 | |- Clazz // 模拟Class | |- ... // 更多工具方法 |- - core // minirefresh的核心，定义了需要暴露的API，所有的主题都继承自核心 |- - theme // minirefresh的主题，每定义一个主题都会挂载到这个命名空间下 | |- defaults // 默认的主题 | |- applet // 仿微信小程序主题 | |- taobao // 仿淘宝刷新主题 | |- drawer3d // 3D抽屉效果主题 | |- drawerslider // 滑动抽屉效果主题 例如，访问applet主题的方法为MiniRefreshTools.theme.applet 注意: 如果是上述这样脚本方式引入，默认会在window对象上绑定MiniRefreshTools var MiniRefreshTools = require('xxx/minirefresh.js'); import { MiniRefreshTools } from 'xxx/minirefresh.js'; 上述是通过require或import引入方式获取全局变量的方法 MiniRefresh 当前使用的主题的变量，每一个主题都会覆盖这个变量，因此 一般情况这个变量指向最后一个引用的主题 例如 var MiniRefreshTools = require('xxx/minirefresh.js'); require('xxx/minirefresh.theme.applet.js'); import { MiniRefreshTools } from 'xxx/minirefresh.js'; import 'xxx/minirefresh.theme.applet.js'; 按照上述方法引入后，MiniRefresh指向的是applet主题（即MiniRefreshTools.theme.applet） Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"api/api_minirefresh.html":{"url":"api/api_minirefresh.html","title":"MinireRresh API","keywords":"","body":"MiniRefresh核心API 所有的主题都拥有的核心API（即core类的API） options配置说明 核心API有一些通用的options配置（生效与所有主题） new MiniRefresh(options); 参数 参数类型 默认值 说明 down Object 默认配置 下拉的默认配置 up Object 默认配置 上拉的默认配置 container String '#minirefresh' minirefresh容器的selector isLockX Boolean true 是否锁定横向滑动，如果锁定则原生滚动条无法滑动(注意，是原生HTML的横向滑动而不是一些类似于swipe之类的第三方滑动插件)，如果想要嵌套横向滑动，可以设为false isUseBodyScroll Boolean false 是否使用body对象的scroll而不是minirefresh-scroll对象的scroll，如果使用body的scroll，可以通过window.onscroll监听，但是这时候请确保一个页面只有一个下拉刷新，否则会有冲突 down的配置 { down: { xxx: xxx } } 参数 参数类型 默认值 说明 isLock Boolean false 是否锁定下拉刷新，如果锁定了，则无法下拉 isAuto Boolean false 是否初始化时自动执行一次下拉刷新，优先级要高于上拉加载的auto，并且两个auto只会执行一次 isAways Boolean false 是否运行在上拉时也可以下拉，如果为false，上拉时无法触发下拉刷新 isAllowAutoLoading Boolean true 设置isAuto=true时生效，是否在初始化的下拉刷新触发事件中显示动画，如果是false，初始化的加载只会触发回调，不会触发动画 isAutoResetUpLoading Boolean true 是否每次下拉完毕后默认重置上拉，为false时下拉刷新后不会自动重置上拉状态 isScrollCssTranslate Boolean true 请只在定制主题时使用，是否在下拉时scroll（内容区域）跟随css translate动画，如果为false，下拉时只会回调下拉距离，scroll不会跟随动画，常用来定制自定义下拉刷新 offset Number 75 触发下拉的阈值，当下拉距离大于这个阈值后，在松开时会触发下拉刷新 dampRateBegin Number 1 阻尼系数，下拉小于offset时的阻尼系数，值越接近0,高度变化越小,表现为越往下越难拉 dampRate Number 0.3 下拉超过阈值后的阻尼系数，越接近0，下拉高度变化越小，例如0.1时表现是超过阈值后基本就拉不动了 bounceTime Number 300 回弹动画时间，下拉取消后或结束后到关闭时，会有一个回弹时间过渡 successAnim Object 默认配置 成功动画配置相关，请只在实现了成功动画的主题中使用，比如default主题,目前成功动画只是保留功能，因为以后可能有主题需要它 successAnim.isEnable Boolean false 是否开启成功动画，开启后，下拉结束之前会先出现成功动画 successAnim.duration Number 300 成功动画的过度时间 onPull Function 空函数 下拉过程中的持续回调，回调参数（downHight, downOffset） onCalcel Function 空函数 取消下拉后的回调,当下拉超过阈值，并松开就会触发 callback Function 空函数 触发下拉刷新后的回调 up的配置 { up: { xxx: xxx } } 参数 参数类型 默认值 说明 isLock Boolean false 是否锁定上，如果锁定了，则无法上拉 isAuto Boolean false 是否初始化时自动执行一次上拉加载（会同时有动画和回调），当下拉的down的isAuto生效时，这个不会生效 isShowUpLoading Boolean true 上拉加载的过程中是否显示动画，如果为false，代表静默加载，没有动画 offset Number 75 触发上拉的阈值，当滑动到距离底部距离小于这个阈值时，会触发上拉加载 loadFull Object 默认配置 自动加载满屏相关配置 loadFull.isEnable Boolean true 是否开启自动加载满屏，开启后，如果当前页面数据没有满屏，并且可以加载更多，就会自动触发上拉加载 loadFull.delay Number 300 延迟加载的时间，自动加载满屏时，会延迟一定时间才加载 onScroll Function 空函数 滚动时的持续回调，回调参数（scrollTop） callback Function 空函数 触发上拉加载后的回调 API方法 minirefresh对象可以调用 var minirefresh = new MiniRefresh({...}); minirefresh.method(); triggerDownLoading(isShowLoading) 触发下拉刷新 minirefresh.triggerDownLoading(); 参数说明 参数 参数类型 说明 isShowLoading Boolean 是否显示loading动画，默认为true，如果关闭动画，每次触发时只会触发回调而不会触发动画 triggerUpLoading(isShowLoading) 触发上拉加载 minirefresh.triggerUpLoading(); 参数说明 参数 参数类型 说明 isShowLoading Boolean 是否显示loading动画，默认为true，如果关闭动画，每次触发时只会触发回调而不会触发动画 endDownLoading(isSuccess, successTips) 结束下拉刷新 minirefresh.endDownLoading(true, '成功更新xx条数据'); 参数说明 参数 参数类型 说明 isSuccess Boolean 只有主题实现了success动画并开启时才有效，是否下拉并处理成功，默认为true，为true时会走入成功动画，否则走入失败动画 successTips String 只有主题实现了success动画并开启时才有效，更新新的成功提示，只有传入参数时才会生效 endUpLoading(isFinishUp) 结束上拉加载 minirefresh.endUpLoading(false); 参数说明 参数 参数类型 说明 isFinishUp Boolean 默认为false，是否没有更多数据，如果为true，会变为没有更多数据，不能继续加载更多，直到下拉刷新后更新状态或者主动resetUp状态才能继续加载 resetUpLoading() 重置上拉加载状态,如果是没有更多数据后重置，会变为可以继续上拉加载 minirefresh.resetUpLoading(); scrollTo(y, duration) 在特定的时间内，滚动到指定的y位置 minirefresh.scrollTo(100， 300); 参数说明 参数 参数类型 说明 y Number 需要滚动到位置的top高度 duration Number 过渡时间，默认为0 getPosition() 获取当前的滚动位置 minirefresh.getPosition(); 返回说明 参数类型 说明 Number 当前的滚动位置 refreshOptions(options) 刷新minirefresh的配置，刷新后会马上生效 // 更多调用参考showcase中的示例 minirefresh.refreshOptions({...}); 参数说明 参数 参数类型 说明 options Object 新的配置参数，有一些属性无法更改 注意:以下配置无法被刷新 container down.callback down.onPull down.onCalcel up.callback up.onScroll Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"themes/theme_default.html":{"url":"themes/theme_default.html","title":"default主题","keywords":"","body":"default主题 默认打包的主题 继承自Core 引入 ... // 同时支持NPM与文件形式引入 var MiniRefreshTools = require('xxx/minirefresh.js'); require('xxx/minirefresh.css'); // debug下是.js dist下是.min.js import MiniRefreshTools from 'minirefresh'; import 'minirefresh/dist/debug/minirefresh.css' 说明 这个主题定义了默认的UI实现，很多其它官方主题都是继承于它的，另外在core的基础上新增了一些功能 toTop（实现了一个滚动到顶部效果） 所有继承自default主题的主题都享有它的配置以及API方法 options配置 在core的配置的基础上，新增以下配置： down的配置 参数 参数类型 默认值 说明 isWrapCssTranslate Boolean false 是否下拉时wrap（下拉区域不是内容区域，与scroll区分开）会跟随css translate contentdown String '下拉刷新' 下拉刷新默认提示 contentover String '释放刷新' 在超过阈值后的提示 contentrefresh String '加载中...' 正在刷新中的提示 contentsuccess String '刷新成功' 刷新成功后，结束前，成功状态的提示 contenterror String '刷新失败' 刷新成功后，结束前，失败状态的提示 up的配置 参数 参数类型 默认值 说明 contentdown String '上拉显示更多' 上拉加载默认提示，一般默认情况会隐藏用不到它 contentrefresh String '加载中...' 上拉加载时的提示 contentnomore String '没有更多数据了' 没有更多数据时的提示 toTop Object 默认配置 滚动到顶部的相关配置，图片的话请在css中修改 toTop.isEnable Boolean true 是否开启自动滚动到顶部 toTop.duration Number 300 滚动到顶部的过渡时间 toTop.offset Number 800 阈值，滚动超过多少距离后才会显示滚动到顶部按钮 API方法 无（除Core提供的外，无新的API） Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"themes/theme_applet.html":{"url":"themes/theme_applet.html","title":"applet主题","keywords":"","body":"applet主题 仿微信小程序主题 继承自default 引入 ... // 同时支持NPM与文件形式引入 var MiniRefreshTools = require('xxx/minirefresh.js'); require('xxx/minirefresh.css'); require('xxx/minirefresh.theme.applet.js'); require('xxx/minirefresh.theme.applet.css'); // debug下是.js dist下是.min.js import MiniRefreshTools from 'xxx/minirefresh.js'; import 'minirefresh/dist/debug/minirefresh.css' import 'minirefresh/dist/debug/themes/applet/minirefresh.theme.applet.js'; import 'minirefresh/dist/debug/themes/applet/minirefresh.theme.applet.css'; 说明 这个主题继承自default主题 享有default主题的所有配置以及API方法 options配置 无（除default提供的外，无新的配置） API方法 无（除default提供的外，无新的API） Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"themes/theme_taobao.html":{"url":"themes/theme_taobao.html","title":"taobao主题","keywords":"","body":"taobao主题 仿淘宝，包括淘宝二楼 继承自default 引入 参考applet主题中的引入，文件其中主题的样式和脚本换为如下名称 taobao/minirefresh.theme.taobao.css taobao/minirefresh.theme.taobao.js 说明 这个主题继承自default主题 享有default主题的所有配置以及API方法 options配置 除了默认配置外，新增了一个秘密花园配置（仿淘宝二楼） down的配置 参数 参数类型 默认值 说明 secretGarden Object 默认配置 秘密花园的配置 secretGarden.isEnable Boolean true 是否开启 secretGarden.offset Number 200 阈值，超过多少阈值后才会触发秘密花园，这个阈值大于下拉阈值，是先下拉，再拉才会触发秘密花园 secretGarden.tips String '欢迎光临秘密花园' 可以进入秘密花园时的提示文字 secretGarden.inSecretGarden Function 空函数 进入秘密花园后的回调，可以在回调中处理自定义事件，然后特定时候关闭秘密花园 API方法 resetSecretGarden() 关闭秘密花园 当触发秘密花园后，可以在特定的情况下关闭它 minirefresh.resetSecretGarden(); Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"themes/theme_drawer3d.html":{"url":"themes/theme_drawer3d.html","title":"drawer3d主题","keywords":"","body":"drawer3d主题 3D抽屉效果 继承自default 引入 参考applet主题中的引入，文件其中主题的样式和脚本换为如下名称 drawer3d/minirefresh.theme.drawer3d.css drawer3d/minirefresh.theme.drawer3d.js 说明 这个主题继承自default主题 享有default主题的所有配置以及API方法 options配置 无 API方法 无 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"themes/theme_drawerslider.html":{"url":"themes/theme_drawerslider.html","title":"drawerslider主题","keywords":"","body":"drawer-slider主题 滑动抽屉效果 继承自default 引入 参考applet主题中的引入，文件其中主题的样式和脚本换为如下名称 drawerslider/minirefresh.theme.drawerslider.css drawerslider/minirefresh.theme.drawerslider.js 说明 这个主题继承自default主题 享有default主题的所有配置以及API方法 options配置 无 API方法 无 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"senior/expand_skin.html":{"url":"senior/expand_skin.html","title":"拓展自定义主题","keywords":"","body":"拓展自定义皮肤 拓展自定义主题主要需要注意以下几大要点： 源码编写注意 提交贡献的流程 源码编写注意 代码编写 关于如何组织代码，可以参考examples中的theme_expand.html与theme_modify.html theme_expand.html theme_modify.html 代码规范 所有的主题源码统一放入src中，例如 src |- - themes | |- applet | |- xxx.js | |- xxx.css | |- xxx 所有的源码必须通过ESlint检测 npm run eslint // 下述是报告导出成html格式_report目录下 npm run eslint:report 执行上述命令可以检测代码 源码编写完后用gulp自动构建出发布包 npm run build 构建完后，通过dist/下的对应发布文件可以引入主题 示例 主题都必须有相应的示例 可以放入examples/themes/中（示例中的代码也请尽可能规范） 另外examples/index.html中可以加入示例链接 主题必须有相应的动态图（xxx.gif） 截取后放入staticresource/screenshoot中（命名请尽量统一） 文档 可以参考其它主题以Markdown形式写好文档 目前不做强制要求... 单元测试 目前不做要求... 提交贡献的流程 主题完成，并代码符合规范，自测通过，示例完成后，就可以提交合并流程 如果是Manager，直接自己Commit即可 如果是其它贡献者，请提交新的PR，可以通知相应的Manager来合并 如果符合要求，一般PR会被合并，并且可以成为贡献者中的一员 PS:如果不太善于编码，但是有新的Idea，也可直接通过Issue提出，一起来参与贡献! Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"contribute/howtocontributor.html":{"url":"contribute/howtocontributor.html","title":"如何贡献","keywords":"","body":"如何参与贡献 可以为项目添砖加瓦，包括但不局限于 重大Bug修复 核心代码优化与改进 新的主题提供 协同参与编写文档，譬如官网，API教程等 通过issue提供被接受的新的Idea 提供设计资源，如Logo，Slogan，官方主页等 需要遵循的代码规则：eslint 对代码的质量有要求，代码需要通过eslint校验才允许合并 npm run eslint 执行上述命令检查代码 默认规则 eslint:recommended 项目中默认开启了eslint的默认校验规则 代码风格 项目中的eslint配置中增加了一些其它规则，详情参考.eslint.js文件 贡献者名单 参与贡献后，达到一定程度（譬如提供了一个新的主题），会添加到贡献者名单中（可以链接友链） 加入Manager 贡献度达到一定要求后（例如贡献了多个主题，并且有后续持续贡献的想法） 可以申请加入Manager小组，对minirefresh/minirefresh有读写权限，可以共同开发维护minirefresh 成为Member 成为Manager后，有共同参与minirefresh项目意愿的，可以申请成为Organization的Member 成为Member后对整个项目有管理权限（包括代码，官网，文档等），成为minirefresh真正的主人， minirefresh是大家的！ 贡献途径 新的Issue，并被采纳 新的PR，并被采纳 和Manager中的管理者交流讨论，并被采纳 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"contribute/contributor.html":{"url":"contribute/contributor.html","title":"贡献者名单","keywords":"","body":"贡献者 贡献代码并被采纳，而且达到以下要求的可以进入贡献者小队，名单留名 贡献程度约等于提供一套自定义主题 或者有类似程度的其它贡献（如发现重大Bug，重要提议被采纳等） 贡献者进一步可以根据贡献度提升为管理者，对整个项目的代码有全面管理读写权限 名单 dailc（a546684355@qq.com） https://github.com/dailc 最初作者，进行初始架构，提供初始版本 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"contribute/discuss.html":{"url":"contribute/discuss.html","title":"交流讨论","keywords":"","body":"交流讨论 gitter QQ群（601988892） 注意，申请加入群时请添加验证信息，例如：minirefresh使用遇到问题等等 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"contribute/relateproject.html":{"url":"contribute/relateproject.html","title":"相关项目","keywords":"","body":"相关项目 记录一些基于MiniRefresh二次开发或拓展的相关项目，因为它们有可能被用到 MiniRefreshBiz 上榜理由 特别适用于批量项目开发，只需要传入接口地址，参数即可自动完成整个下拉刷新功能 说明 基于MiniRefresh对业务流程进行二次封装，进一步减少代码量，包括接口数据自动处理，上拉翻页自动处理等 地址 https://github.com/minirefresh/minirefresh-bizlogic minirefresh-vue-examples 上榜理由 快速的了解到如何在Vue中使用MiniRefresh 说明 MiniRefresh在Vue组件化开发中的运用 地址 https://github.com/minirefresh/minirefresh-vue-examples Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "},"GLOSSARY.html":{"url":"GLOSSARY.html","keywords":"","body":"Git 分散式版本控制软件 Markdown Aaron Swartz 跟John Gruber共同设计的排版语言 Hybrid 一种混合开发模式，原生容器提供方法给H5页面调用，拓展H5功能，提高体验 Copyright © dailc 2017 all right reserved，powered by Gitbook文件修订时间： 2017-10-30 11:14:22 "}}